
# 语法解析器
但总体来讲一个语法解析器应该读入像 y = x + 1 这样的字符串，然后
把它转换成抽象语法树（AST）。抽象语法树是源代码的一种表示，去掉了空格之类的无关
细节，而只关注程序的分层结构。

语法关心的只是程序的表面是什么样的，而不是它的含义。

*** to_s ***
如果被插入的表达式返回的不是一个字符串类型的对象，那么这个对象就会自动收到一个
to_s 消息以返回能顶替其位置的字符串。我们可以借此控制被替换对象的展示方式：
>> o = Object.new
=> #<Object>
>> def o.to_s
'a new object'
end
=> nil
>> "here is #{o}"
=> "here is a new object"
*** to_s ***
